// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3) &ht LALT  k1  &ht LCTRL k2  &ht LSHFT k3
#define HRMR(k1,k2,k3) &ht RSHFT k1  &ht RCTRL k2  &ht LALT  k3

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3
#define ARROW   4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <175>;
            //quick-tap-ms = <150>;
            //require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            //key-positions <0 4 10 14 20 24>;
            key-positions <0 1 2>;
            bindings = <&bt BT_CLR>;
            };
        };
    };
	
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &ht RWIN Q &kp       W &kp       E &kp     R &kp T       &kp Y &kp     U &kp       I &kp       O &ht CAPSLOCK  ESC
                &ht LALT A &ht LCTRL S &ht LSHFT D &lt SYM F &kp G       &kp H &lt NUM J &ht RSHFT K &ht RCTRL L &ht     LALT SEMI
                &lt FUNC Z &kp       X &kp       C &kp     V &kp B       &kp N &kp     M &kp   COMMA &kp     DOT &lt    ARROW FSLH
                &lt ARROW TAB &kp SPACE       &kp BSPC &ht RWIN ENTER
                >;
        };

        num_layer {
            bindings = <
                &trans &kp N7 &kp N8 &kp N9 &trans      &trans &trans &trans &trans &trans
                &kp N0 &kp N4 &kp N5 &kp N6 &trans      &trans &trans &trans &trans &trans
                &trans &kp N1 &kp N2 &kp N3 &trans      &trans &trans &trans &trans &trans
                                     &trans &trans      &trans &trans
                >;
        };

        sym_layer {
            bindings = <
                &trans &trans &trans &trans &trans      &kp GRAVE &kp LBKT  &kp RBKT &kp MINUS &kp BSLH
                &trans &trans &trans &trans &trans      &trans    &kp LPAR  &kp RPAR &kp     P &kp APOS
                &trans &trans &trans &trans &trans      &trans    &kp EQUAL &trans   &trans    &trans
                                     &trans &trans      &trans    &trans
                >;
        };

        func_layer {
            bindings = <
                &trans &kp F7 &kp F8 &kp F9 &kp F10     &trans &trans &trans &trans &trans
                &trans &kp F4 &kp F5 &kp F6 &kp F11     &trans &trans &trans &trans &trans
                &trans &kp F1 &kp F2 &kp F3 &kp F12     &trans &trans &trans &trans &trans
                                     &trans  &trans     &trans &trans
                >;
        };

        arrow_layer {
            bindings = <
                &trans &trans &trans &trans &bt BT_SEL 3      &bt BT_SEL 0 &kp PG_UP    &kp   UP &kp PG_DN    &trans
                &trans &trans &trans &trans &bt BT_SEL 2      &bt BT_SEL 1 &kp  LEFT    &kp DOWN &kp RIGHT    &trans
                &trans &trans &trans &trans &trans            &kp DEL      &kp K_VOL_DN &kp K_PP &kp K_VOL_UP &trans
                                     &trans &bt BT_CLR        &trans       &trans
                >;
        };
    };
};
